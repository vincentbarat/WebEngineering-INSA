openapi: 3.0.3
info:
  title: TP Web INSA Rennes
  description: |
    Introduction to REST back-end development in Java with Spring and OpenAPI
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v2
tags:
  - name: todo
    description: REST operations on Todos
  - name: todolist
    description: REST operation on Todo lists
paths:
  /public/todo/hello:
    get:
      tags:
        - todo
      responses:
        '200':
          description: Success
  /public/todo/todo:
    get:
      tags:
        - todo
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
    post:
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Todo'
                - $ref: '#/components/schemas/SpecificTodo'
              discriminator:
                propertyName: type
                mapping:
                  todo: '#/components/schemas/Todo'
                  spec: '#/components/schemas/SpecificTodo'
        required: true
      responses:
        '200':
          description: Succcess
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Todo'
                  - $ref: '#/components/schemas/SpecificTodo'
                discriminator:
                  propertyName: type
                  mapping:
                    todo: '#/components/schemas/Todo'
                    spec: '#/components/schemas/SpecificTodo'
    put:
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Invalid ID supplied
  /public/todo/bof/todo:
    patch:
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Invalid ID supplied
  /public/todo/todo/{id}:
    delete:
      tags:
        - todo
      parameters:
        - name: id
          in: path
          description: The identifier of the todo to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
  /public/todolist:
    post:
      tags:
        - todolist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
components:
  schemas:
    Todo:
      type: object
      properties:
        type:
          type: string
          enum:
            - todo
            - spec
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            type: string
            enum:
              - HIGH_PRIORITY
              - LOW_PRIORITY
              - WORK
              - ENTERTAINMENT
    SpecificTodo:
      allOf:
        - $ref: '#/components/schemas/Todo'
        - type: object
          properties:
            specificAttr:
              type: string
    TodoList:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        owner:
          type: string
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
